{"ast":null,"code":"var _jsxFileName = \"/Users/praiseomeire/Documents/forms/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  // const nameInputRef = useRef()\n  const [enteredName, setEnteredName] = useState('');\n  // const [enteredNameIsValid, setEnteredNameIsValid] = useState(false)\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n\n    // if(enteredName.trim() !== ''){\n    //   setEnteredNameIsValid(true)\n    // }\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n    }\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n\n    // const enteredValue = nameInputRef.current.value;\n    // console.log(enteredValue);\n\n    // nameInputRef.current.value = ' ' // not ideal. dont manipulate the dom\n\n    setEnteredName('');\n  };\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"VUm+G9YkVtHi/Fjk92HS4+x5TZ8=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","nameInputChangeHandler","event","target","value","nameInputBlurHandler","setEnteredNameIsValid","formSubmissionHandler","preventDefault","console","log","nameInputIsInvalid","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","_c","$RefreshReg$"],"sources":["/Users/praiseomeire/Documents/forms/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\n\nconst SimpleInput = (props) => {\n  // const nameInputRef = useRef()\nconst [enteredName, setEnteredName] =  useState('')\n// const [enteredNameIsValid, setEnteredNameIsValid] = useState(false)\nconst [enteredNameTouched, setEnteredNameTouched] = useState(false)\n\nconst enteredNameIsValid = enteredName.trim() !== '';\n\n\nconst nameInputChangeHandler = event => {\n\n  setEnteredName(event.target.value)\n\n// if(enteredName.trim() !== ''){\n//   setEnteredNameIsValid(true)\n// }\n\n}\n\nconst nameInputBlurHandler = event => {\n  setEnteredNameTouched(true)\n\n\nif(enteredName.trim() === ''){\n  setEnteredNameIsValid(false)\n}\n}\n\nconst formSubmissionHandler = event => {\nevent.preventDefault()\n\nsetEnteredNameTouched(true)\n\nif(enteredName.trim() === ''){\n  setEnteredNameIsValid(false)\n  return;\n}\nsetEnteredNameIsValid(true)\n\nconsole.log(enteredName)\n\n// const enteredValue = nameInputRef.current.value;\n// console.log(enteredValue);\n\n// nameInputRef.current.value = ' ' // not ideal. dont manipulate the dom\n\nsetEnteredName('');\n};\n\nconst nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched\n\nconst nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n         type='text' \n         id='name' \n         onChange= {nameInputChangeHandler}\n        onBlur={nameInputBlurHandler}\n        value={enteredName}/>\n\n        {nameInputIsInvalid && <p className=\"error-text\">Invalid input</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAIP,QAAQ,CAAC,EAAE,CAAC;EACnD;EACA,MAAM,CAACQ,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAMU,kBAAkB,GAAGJ,WAAW,CAACK,IAAI,EAAE,KAAK,EAAE;EAGpD,MAAMC,sBAAsB,GAAGC,KAAK,IAAI;IAEtCN,cAAc,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;;IAEpC;IACA;IACA;EAEA,CAAC;;EAED,MAAMC,oBAAoB,GAAGH,KAAK,IAAI;IACpCJ,qBAAqB,CAAC,IAAI,CAAC;IAG7B,IAAGH,WAAW,CAACK,IAAI,EAAE,KAAK,EAAE,EAAC;MAC3BM,qBAAqB,CAAC,KAAK,CAAC;IAC9B;EACA,CAAC;EAED,MAAMC,qBAAqB,GAAGL,KAAK,IAAI;IACvCA,KAAK,CAACM,cAAc,EAAE;IAEtBV,qBAAqB,CAAC,IAAI,CAAC;IAE3B,IAAGH,WAAW,CAACK,IAAI,EAAE,KAAK,EAAE,EAAC;MAC3BM,qBAAqB,CAAC,KAAK,CAAC;MAC5B;IACF;IACAA,qBAAqB,CAAC,IAAI,CAAC;IAE3BG,OAAO,CAACC,GAAG,CAACf,WAAW,CAAC;;IAExB;IACA;;IAEA;;IAEAC,cAAc,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,MAAMe,kBAAkB,GAAG,CAACZ,kBAAkB,IAAIF,kBAAkB;EAEpE,MAAMe,gBAAgB,GAAGD,kBAAkB,GAAG,sBAAsB,GAAG,cAAc;EAGnF,oBACEpB,OAAA;IAAMsB,QAAQ,EAAEN,qBAAsB;IAAAO,QAAA,gBACpCvB,OAAA;MAAKwB,SAAS,EAAEH,gBAAiB;MAAAE,QAAA,gBAC/BvB,OAAA;QAAOyB,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACvC7B,OAAA;QACC8B,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,MAAM;QACTC,QAAQ,EAAGtB,sBAAuB;QACnCuB,MAAM,EAAEnB,oBAAqB;QAC7BD,KAAK,EAAET;MAAY;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,EAEpBT,kBAAkB,iBAAIpB,OAAA;QAAGwB,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9D,eACN7B,OAAA;MAAKwB,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BvB,OAAA;QAAAuB,QAAA,EAAQ;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEX,CAAC;AAAC1B,EAAA,CAxEIF,WAAW;AAAAiC,EAAA,GAAXjC,WAAW;AA0EjB,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}