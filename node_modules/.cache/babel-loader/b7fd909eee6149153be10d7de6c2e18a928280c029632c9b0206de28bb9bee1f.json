{"ast":null,"code":"var _jsxFileName = \"/Users/praiseomeire/Documents/forms/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputtHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n\n  //form input validity\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    if (!enteredNameIsValid && enteredEmailIsValid) {\n      return;\n    }\n\n    // console.log(enteredName)\n\n    setEnteredName('');\n    setEnteredNameTouched(false);\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Enter Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Invalid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"f2BT/6Ou2YUHqM6irtW8w3VkseA=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputtHasError","valueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","emailInputIsInvalid","formIsValid","nameInputChangeHandler","event","setEnteredName","target","emailInputChangeHandler","nameInputBlurHandler","setEnteredNameTouched","emailInputBlurHandler","formSubmissionHandler","preventDefault","nameInputClasses","nameInputIsInvalid","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/Users/praiseomeire/Documents/forms/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const { \n    value: enteredName, \n    isValid: enteredNameIsValid,\n    hasError: nameInputtHasError, \n    valueChangeHandler: nameChangedHandler, \n    inputBlurHandler: nameBlurHandler \n  } = useInput(value => value.trim() !== '' )\n\n\nconst [enteredEmail, setEnteredEmail] = useState('')\nconst [enteredEmailTouched, setEnteredEmailTouched] = useState(false)\n\n\nconst enteredEmailIsValid = enteredEmail.includes('@');\nconst emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched\n\nlet formIsValid = false\n\n\n//form input validity\nif(enteredNameIsValid && enteredEmailIsValid) {\n  formIsValid = true\n}\n\nconst nameInputChangeHandler = event => {\n  setEnteredName(event.target.value)\n}\n\nconst emailInputChangeHandler = event => {\n  setEnteredEmail(event.target.value)\n}\n\nconst nameInputBlurHandler = event => {\n  setEnteredNameTouched(true)\n}\n\nconst emailInputBlurHandler = event => {\n  setEnteredEmailTouched(true)\n}\n\nconst formSubmissionHandler = event => {\nevent.preventDefault()\n\nsetEnteredNameTouched(true)\nsetEnteredEmailTouched(true)\n\nif(!enteredNameIsValid && enteredEmailIsValid){\n  return;\n}\n\n// console.log(enteredName)\n\nsetEnteredName('');\nsetEnteredNameTouched(false);\nsetEnteredEmail('');\nsetEnteredEmailTouched(false);\n};\n\n\n\nconst nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\nconst emailInputClasses = emailInputIsInvalid ? 'form-control invalid' : 'form-control'\n\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n         type='text' \n         id='name' \n         onChange= {nameInputChangeHandler}\n        onBlur={nameInputBlurHandler}\n        value={enteredName}/>\n\n        {nameInputIsInvalid && <p className=\"error-text\">Invalid input</p>}\n      </div>\n\n      <div className={emailInputClasses} >\n        <label htmlFor='email'>Enter Email</label>\n        <input \n         type='email' \n         id='email' \n         onChange= {emailInputChangeHandler}\n        onBlur={emailInputBlurHandler}\n        value={enteredEmail}/>\n\n        {emailInputIsInvalid && <p className=\"error-text\">Invalid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}